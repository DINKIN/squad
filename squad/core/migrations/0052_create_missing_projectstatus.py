# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-27 19:17
from __future__ import unicode_literals

from django.db import migrations
from squad.core.statistics import geomean


def create_missing_projectstatus(apps, schema_editor):
    ProjectStatus = apps.get_model('core', 'ProjectStatus')
    Build = apps.get_model('core', 'Build')
    Metric = apps.get_model('core', 'Metric')
    for build in Build.objects.order_by('datetime').prefetch_related('status'):
        try:
            build.status
        except ProjectStatus.DoesNotExist as e:
            metrics = Metric.objects.filter(test_run__build_id=build.id).all()
            metrics_summary = geomean([m.result for m in metrics])

            tests_pass = 0
            tests_fail = 0
            tests_skip = 0
            for run in build.test_runs.prefetch_related('tests').all():
                for test in run.tests.all():
                    if test.result is True:
                        tests_pass += 1
                    elif test.result is False:
                        tests_fail += 1
                    else:
                        tests_skip += 1

            previous = ProjectStatus.objects.filter(
                build__project=build.project,
                build__datetime__lt=build.datetime,
            ).last()

            ProjectStatus.objects.create(
                build=build,
                previous=previous,
                tests_pass=tests_pass,
                tests_fail=tests_fail,
                tests_skip=tests_skip,
                metrics_summary=metrics_summary,
                last_updated=build.datetime,
            )


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0051_build_status'),
    ]

    operations = [
        migrations.RunPython(
            create_missing_projectstatus,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
